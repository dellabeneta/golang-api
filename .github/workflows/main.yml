
name: Go API CI/CD Pipeline
on:
  workflow_dispatch: {}
  push:
    branches:
      - main
    paths:
      - configs/**
      - controllers/**
      - models/**
      - routes/**
  pull_request:
    branches:
      - main
    paths:
      - configs/**
      - controllers/**
      - models/**
      - routes/**

jobs:
  build:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"
      - name: Verify dependencies
        run: go mod verify
      - name: Build
        run: go build -v -o myapp -ldflags="-s -w" ./
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: myapp-binary
          path: myapp
  
  deploy:
    runs-on: self-hosted
    needs: build
    strategy:
      matrix:
        server:
          - 1
          - 2
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: myapp-binary
          path: ./
      - name: Set executable permissions
        run: chmod +x myapp
      - name: Deploy to server-${{ matrix.server }}
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_HOST: ${{ matrix.server == 1 && secrets.SERVER_HOST_1 || secrets.SERVER_HOST_2 }}
          SERVER_PATH: ${{ secrets.SERVER_PATH }}

        run: |

          # Install SSH client
          sudo apt-get update
          sudo apt-get install -y openssh-client

          # Add SSH key to the agent
          eval $(ssh-agent -s)
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -

          # Copy the binary to the server
          scp -o StrictHostKeyChecking=no myapp $SERVER_USER@$SERVER_HOST:$SERVER_PATH

          # Restart the service on the server
          ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_HOST "sudo systemctl restart myapp.service"
        
          
   

              

