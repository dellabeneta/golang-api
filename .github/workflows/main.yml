
name: Go API CI/CD Pipeline
on:
  workflow_dispatch: {}
  push:
    branches:
      - main
    paths:
      - configs/**
      - controllers/**
      - models/**
      - routes/**
  pull_request:
    branches:
      - main
    paths:
      - configs/**
      - controllers/**
      - models/**
      - routes/**

jobs:
  build:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"
      - name: Verify dependencies
        run: go mod verify
      - name: Build
        run: go build -v -o myapp -ldflags="-s -w" ./
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: myapp-binary
          path: myapp
  
  deploy:
    runs-on: self-hosted
    needs: build
    strategy:
      matrix:
        server:
          - 1
          - 2
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: myapp-binary
          path: ./
      - name: Set executable permissions
        run: chmod +x myapp
      - name: Deploy to server-${{ matrix.server }}
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_HOST: ${{ matrix.server == 1 && secrets.SERVER_HOST_1 || secrets.SERVER_HOST_2 }}
          SERVER_PATH: ${{ secrets.SERVER_PATH }}
        run: |
          # Create temporary directory
          TEMP_DIR=$(mktemp -d)
          echo "$SSH_PRIVATE_KEY" > "$TEMP_DIR/private_key"
          chmod 600 "$TEMP_DIR/private_key"
          
          # First create a backup of the existing binary
          ssh -o StrictHostKeyChecking=no -i "$TEMP_DIR/private_key" $SERVER_USER@$SERVER_HOST << 'EOF'
            sudo systemctl stop myapp.service || true
            if [ -f "$SERVER_PATH/myapp" ]; then
              sudo mv "$SERVER_PATH/myapp" "$SERVER_PATH/myapp.bak"
            fi
          EOF
          
          # Copy new binary using rsync for better reliability
          rsync -avz -e "ssh -i $TEMP_DIR/private_key -o StrictHostKeyChecking=no" \
            myapp $SERVER_USER@$SERVER_HOST:$SERVER_PATH/myapp.new
          
          # Move new binary into place and set permissions
          ssh -o StrictHostKeyChecking=no -i "$TEMP_DIR/private_key" $SERVER_USER@$SERVER_HOST << 'EOF'
            sudo mv "$SERVER_PATH/myapp.new" "$SERVER_PATH/myapp"
            sudo chown root:root "$SERVER_PATH/myapp"
            sudo chmod +x "$SERVER_PATH/myapp"
            sudo systemctl start myapp.service
          EOF
          
          # Cleanup
          rm -rf "$TEMP_DIR"

